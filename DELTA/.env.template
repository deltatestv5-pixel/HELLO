# DELTA Discord Bot Hosting Platform - Environment Variables Template
# Copy this file to .env and fill in the values

# ===== REQUIRED CONFIGURATION =====

# Database Configuration
DATABASE_URL="postgresql://user:password@hostname:port/database"
# For Neon Database: postgresql://user:password@endpoint/database?sslmode=require

# Discord OAuth2 Configuration
DISCORD_CLIENT_ID="your_discord_client_id"
DISCORD_CLIENT_SECRET="your_discord_client_secret"
DISCORD_BOT_TOKEN="your_discord_bot_token" # For adding users to your server

# Session Security
SESSION_SECRET="generate_a_strong_random_string_for_production"
SESSION_MAX_AGE=2592000000 # 30 days in milliseconds

# ===== OPTIONAL CONFIGURATION =====

# Application Settings
PORT=5000 # Port to run the server on
NODE_ENV="production" # production or development
APP_URL="https://your-app-domain.com" # Used for OAuth callbacks
APP_NAME="DELTA Bot Hosting"

# Cookie Settings
COOKIE_DOMAIN="your-app-domain.com" # Set in production

# Discord Server Integration
DISCORD_SERVER_INVITE="https://discord.gg/your-invite-code" # To auto-add users to your server

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000 # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100 # Max requests per window

# Bot Resource Limits
MAX_BOTS_PER_USER=1 # Maximum number of bots per user
MEMORY_MAX="128M" # Maximum memory per bot
CPU_QUOTA="50%" # Maximum CPU usage per bot
DISK_QUOTA="1G" # Maximum disk space per bot

# Proxy Configuration
TRUST_PROXY_HOPS=1 # Number of proxy hops to trust for IP detection

# Security Settings
ENABLE_BOT_ISOLATION=true # Use Docker for bot isolation
DOCKER_NETWORK="delta-network" # Docker network for bot containers

# Logging
LOG_LEVEL="info" # debug, info, warn, error
ENABLE_REQUEST_LOGGING=true # Log all API requests

# Monitoring
ENABLE_METRICS=false # Enable Prometheus metrics
METRICS_PORT=9090 # Port for Prometheus metrics